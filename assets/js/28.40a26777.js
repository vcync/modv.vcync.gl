(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{211:function(t,e,a){"use strict";a.r(e);var r=a(6),s=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"writing-a-shader-module"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#writing-a-shader-module"}},[t._v("#")]),t._v(" Writing a Shader Module")]),t._v(" "),e("p",[t._v("We're going to write a Module which works with the built-in "),e("code",[t._v("shader")]),t._v(" Renderer.")]),t._v(" "),e("p",[t._v("To follow this guide, we'd recommend having some experience with:")]),t._v(" "),e("ul",[e("li",[t._v("JavaScript (ES6+)")]),t._v(" "),e("li",[t._v("GLSL\n"),e("ul",[e("li",[t._v("if you don't already have experience with GLSL then we recommend ???")])])])]),t._v(" "),e("p",[t._v("We'll be stealing ðŸ˜¬ "),e("a",{attrs:{href:"https://github.com/AVGP/shaderpad/blob/gh-pages/interesting_shaders.md#spherical-with-concentric-circles-blend",target:"_blank",rel:"noopener noreferrer"}},[t._v("a shader"),e("OutboundLink")],1),t._v(" from "),e("a",{attrs:{href:"https://twitter.com/g33konaut",target:"_blank",rel:"noopener noreferrer"}},[t._v("Martin Splitt"),e("OutboundLink")],1),t._v("'s "),e("a",{attrs:{href:"https://github.com/AVGP/shaderpad",target:"_blank",rel:"noopener noreferrer"}},[t._v("awesome shaderpad"),e("OutboundLink")],1),t._v(" - so you won't need a bunch of GLSL experience to follow along.")]),t._v(" "),e("h2",{attrs:{id:"_1-create-a-new-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-create-a-new-file"}},[t._v("#")]),t._v(" 1. Create a new file")]),t._v(" "),e("p",[t._v("Save a blank JavaScript file in the "),e("RouterLink",{attrs:{to:"/guide/mediaManager.html#media-folder"}},[t._v("Media Manager's media directory")]),t._v(". This will need to be placed in a "),e("code",[t._v("module")]),t._v(" folder within a Project folder. e.g. "),e("code",[t._v("[media path]/[project]/module")]),t._v(".")],1),t._v(" "),e("p",[t._v("By saving your Module here the Media Manager will compile your code and send it to modV on every file save. If you've placed your Module within a Layer already, you'll need to remove it from the Layer and drag your Module in again from the Gallery to use the updated Module.")]),t._v(" "),e("h2",{attrs:{id:"_2-export-an-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-export-an-object"}},[t._v("#")]),t._v(" 2. Export an Object")]),t._v(" "),e("p",[t._v("Let's get started by exporting an Object. modV Modules are written out as a plain Object.")]),t._v(" "),e("div",{staticClass:"language-JavaScript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"_3-set-up-the-meta"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-set-up-the-meta"}},[t._v("#")]),t._v(" 3. Set up the Meta")]),t._v(" "),e("p",[t._v("Next up, we'll need to describe our Module with a meta Object block.\nLet's define the Module type as "),e("code",[t._v("shader")]),t._v(" and give our Module a name.")]),t._v(" "),e("div",{staticClass:"language-JavaScript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("meta")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this tells modV our Module should be used with the shader renderer")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'shader'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// our Module's name")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Spherical'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"_4-define-our-shaders"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-define-our-shaders"}},[t._v("#")]),t._v(" 4. Define our Shaders")]),t._v(" "),e("p",[t._v("In "),e("code",[t._v("shader")]),t._v(" type Modules, there are two properties on the Module body to define the Shaders we want to use:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("fragmentShader")])]),t._v(" "),e("li",[e("code",[t._v("vertexShader")])])]),t._v(" "),e("p",[t._v("Both are optional and the "),e("code",[t._v("shader")]),t._v(" Renderer automatically detects whether we're using "),e("code",[t._v("#version 300 es")]),t._v(" or not.\nBoth of these variables accept Strings only.")]),t._v(" "),e("p",[t._v("If you have a larger shader or require syntax highlighting, you may import your shaders using:")]),t._v(" "),e("div",{staticClass:"language-JavaScript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" fragmentShader "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'circles.frag'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" vertexShader "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'circles.vert'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("We'll only be using the "),e("code",[t._v("fragmentShader")]),t._v(" property in this guide:")]),t._v(" "),e("div",{staticClass:"language-JavaScript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// meta: { ... },")]),t._v("\n  \n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("fragmentShader")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n    precision mediump float;\n    varying mediump vec2 uv;\n\n    uniform float uA;\n    uniform sampler2D u_modVCanvas;\n\n    void main(void) {\n      vec2 p = -1.0 + 2.0 * uv.xy;\n      float r = sqrt(dot(p, p));\n\n      float f = sqrt(1.0 - (r * r));\n      bool toggle = mod(r, 0.1) > 0.05 ? true : false;\n      if (f > 0.0 && toggle) \n        gl_FragColor = vec4(vec3(f), 1.0) * texture2D(u_modVCanvas, vec2(uv.x, uv.y));\n      else \n        gl_FragColor = vec4(uv.x, uv.y, 1.0, 1.0);\n    }\n  ")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"_5-props-and-uniforms"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-props-and-uniforms"}},[t._v("#")]),t._v(" 5. Props and Uniforms")]),t._v(" "),e("h3",{attrs:{id:"_5-1-uniforms"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-uniforms"}},[t._v("#")]),t._v(" 5.1 uniforms")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("shader")]),t._v(" Renderer defines the following Uniforms for you to consume within your Shader:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("name")]),t._v(" "),e("th",[t._v("type")]),t._v(" "),e("th",[t._v("info")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("u_modVCanvas")]),t._v(", "),e("code",[t._v("iChannel0")]),t._v(", "),e("code",[t._v("iChannel1")]),t._v(", "),e("code",[t._v("iChannel2")]),t._v(", "),e("code",[t._v("iChannel3")])]),t._v(" "),e("td",[e("code",[t._v("texture2D")])]),t._v(" "),e("td",[t._v("The incoming frame")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("u_delta")]),t._v(", "),e("code",[t._v("iTime")]),t._v(", "),e("code",[t._v("iGlobalTime")])]),t._v(" "),e("td",[e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("Time in milliseconds")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("u_time")])]),t._v(" "),e("td",[e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("Time in seconds")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("iFrame")])]),t._v(" "),e("td",[e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("Frame count since modV's drawloop started")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("iResolution")])]),t._v(" "),e("td",[e("code",[t._v("vec3")])]),t._v(" "),e("td",[t._v("The "),e("strong",[t._v("width")]),t._v(", "),e("strong",[t._v("height")]),t._v(" and "),e("strong",[t._v("pixel density")]),t._v(" of the largest Output Window")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("iMouse")])]),t._v(" "),e("td",[e("code",[t._v("vec4")])]),t._v(" "),e("td",[e("code",[t._v("[0.0, 0.0, 0.0, 0.0]")]),t._v(" "),e("strong",[t._v("@todo make this an actual control")])])])])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("Shadertoy compatibility")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("shader")]),t._v(" Renderer attempts to provide basic Shadertoy Uniform compatibility."),e("br"),t._v(" "),e("strong",[t._v("Currently it does not support passes/buffers or Audio shaders.")])])]),t._v(" "),e("h3",{attrs:{id:"_5-2-defining-props"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-defining-props"}},[t._v("#")]),t._v(" 5.2 Defining props")]),t._v(" "),e("p",[t._v("With a "),e("code",[t._v("shader")]),t._v(" Module, the props should match the uniforms in your shader.")]),t._v(" "),e("p",[t._v("Our shader above has a uniform named "),e("code",[t._v("uA")]),t._v(" so we'll define the same in our props:")]),t._v(" "),e("div",{staticClass:"language-JavaScript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("props")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("uA")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'float'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("min")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("max")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),e("h2",{attrs:{id:"_6-putting-everything-together"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-putting-everything-together"}},[t._v("#")]),t._v(" 6. Putting everything together")]),t._v(" "),e("p",[t._v("The following code puts together everything from above:")]),t._v(" "),e("div",{staticClass:"language-JavaScript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("meta")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'shader'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Spherical'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  \n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("props")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("uA")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'float'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("min")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("max")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("fragmentShader")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n    precision mediump float;\n    varying mediump vec2 uv;\n\n    uniform float uA;\n    uniform sampler2D u_modVCanvas;\n\n    void main(void) {\n      vec2 p = -1.0 + 2.0 * uv.xy;\n      float r = sqrt(dot(p, p));\n\n      float f = sqrt(1.0 - (r * r));\n      bool toggle = mod(r, 0.1) > 0.05 ? true : false;\n      if (f > 0.0 && toggle) \n        gl_FragColor = vec4(vec3(f), 1.0) * texture2D(u_modVCanvas, vec2(uv.x, uv.y));\n      else \n        gl_FragColor = vec4(uv.x, uv.y, 1.0, 1.0);\n    }\n  ")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);